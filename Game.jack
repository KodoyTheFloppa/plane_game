class Game{
    field Plane plane;
    field Battery battery;
    field Fuel fuel;
    field Sprites sprites;
    
    field Airship airship1;
    field Airship airship2;
    field Airship airship3;
    field Airship airship4;
    // field Airship airship5;
    // field Airship airship6;
    // field Airship airship7;
    
    field Random random;

    field int score;

    field boolean end;
    field boolean conflict;

    constructor Game new()
    {
        let plane = Plane.new(100, 200);
        let random = Random.new(31);
        return this;
    }

    method void start()
    {
        var int currentKey;
        var int batteryCount;
        var int airshipCount;

        var boolean inX;
        var boolean inY;

        let end = false;
        
		while(~end)
        {
            if (conflict)
            {
                do Output.moveCursor(8, 26);
                do Output.printString("Game Over!");
            }
            do Output.moveCursor(10, 28);
			do Output.printString("J E T");
			do Output.moveCursor(12, 23);
			do Output.printString("Press 'S' to Start!");
			while(~(currentKey = 83))
            {
				let currentKey = Keyboard.keyPressed();
			}
			do Screen.clearScreen();


            let conflict = false;
            let score = 0;
            let batteryCount = 0;
            let airshipCount = 0;

            let battery = Battery.new(2, 2);
            let fuel = Fuel.new(520, random.get());

            let airship1 = Airship.new(520, random.get());
            let airship2 = Airship.new(410, random.get());
            let airship3 = Airship.new(300, random.get());
            let airship4 = Airship.new(190, random.get());

            do sprites.drawPlane(plane.getX(), plane.getY());

            while(~(battery.IsEmpty()) & (~conflict))
            {
                do Sys.wait(75);
                let batteryCount = batteryCount + 1;
                if (batteryCount = 5)
                {
                    do battery.erase();
                    let batteryCount = 0;
                }

                do checkFuel(fuel);

                do checkAir(airship1);
                do checkAir(airship2);
                do checkAir(airship3);
                do checkAir(airship4);
                do drawScoreField();


                let currentKey = Keyboard.keyPressed();
				if (currentKey = 131)
                {
                    do sprites.erasePlane(plane.getX(), plane.getY());
					do plane.moveUp(5);
                    do sprites.drawPlane(plane.getX(), plane.getY());
				}
				if (currentKey = 133)
                {
                    do sprites.erasePlane(plane.getX(), plane.getY());
					do plane.moveDown(5);
                    do sprites.drawPlane(plane.getX(), plane.getY());
				}
            }
        }
        
        return;
    }
            
    method void checkFuel(Fuel fuel)
    {
        var boolean inX, inY;
        if (fuel.getX() > 1)
        {
            do fuel.erase();
            do fuel.moveLeft(7);
            do fuel.draw();

            let inX = (plane.getX()-60) < fuel.getX() & fuel.getX() < (plane.getX()+20);
            let inY = ((plane.getY()-15) < fuel.getY()) & (fuel.getY() < (plane.getY()+35));

            if (inX & inY)
            {
                do fuel.erase();
                do fuel.setCoords(520, random.get());
                do battery.addFuel();
                do battery.drawFull(2, 2);

                let score = score + 1;
            }
        }
        else
        {
            do fuel.erase();
            do fuel.setCoords(520, random.get());
        }
        return;
    }

    method void checkAir(Airship airship)
    {
        var boolean inX, inY;
        if (airship.getX() > 10)
        {
            do airship.erase();
            do airship.moveLeft(5);
            do airship.draw();

            let inX = (plane.getX()-15) < airship.getX() & airship.getX() < (plane.getX()+20);
            let inY = ((plane.getY()-15) < airship.getY()) & (airship.getY() < (plane.getY()+35));

            if (inX & inY)
            {
                let conflict = true;
            }
        }
        else
        {
            do airship.erase();
            do airship.setCoords(520, random.get());
        }
        return;
    }

    method void drawScoreField()
    {
        do Screen.setColor(false);
        do Screen.drawRectangle(0, 25, 46, 255);

        do Output.moveCursor(3, 0);
        do Output.printString("SCORE:");
        do Output.moveCursor(4, 2);
        do Output.printInt(score);

        do Screen.setColor(true);
        do Screen.drawLine(47, 0, 47, 255);
        
        do Screen.setColor(false);

        return;
    }
    

    method void dispose(){
        return;
    }
}
