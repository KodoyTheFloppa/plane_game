function Random.new 2
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
call Array.new 1
pop this 0
push argument 0
pop this 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 0
lt
not
if-goto WHILE_END0
push argument 0
push constant 1
sub
push local 0
call Math.multiply 2
push local 0
call Math.multiply 2
push argument 0
push constant 100
sub
push local 0
call Math.multiply 2
sub
push argument 0
push argument 0
call Math.multiply 2
add
pop local 1
push local 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
neg
call Math.multiply 2
pop local 1
label IF_FALSE0
label WHILE_EXP1
push local 1
push constant 221
gt
not
if-goto WHILE_END1
push local 1
push constant 221
sub
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 20
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 20
add
pop local 1
label IF_FALSE1
push local 0
push this 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 1
push constant 1
pop this 3
push pointer 0
return
function Random.get 0
push argument 0
pop pointer 0
push this 1
push constant 1
add
push this 2
push constant 1
sub
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 1
push this 3
push constant 1
add
pop this 3
label IF_FALSE0
push this 1
push constant 1
add
push this 3
call Math.multiply 2
pop this 1
push this 1
push this 2
push constant 1
sub
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push this 2
push constant 1
sub
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
pop this 3
label IF_FALSE2
push this 3
pop this 1
label IF_FALSE1
push this 1
push this 0
add
pop pointer 1
push that 0
return
