class Plane {
    field int x, y; 
    field boolean alive;

    constructor Plane new(int initialX, int initialY){
        let x = initialX;
        let y = initialY;
        return this;
    }

    // Метод для перемещения самолета вверх
    method void moveUp(int distance) {
        let y = y - distance;
        if (y > 250)
        {
            let y = 250;
        }
        return;
    }

    // Метод для перемещения самолета вниз
    method void moveDown(int distance) {
        let y = y + distance;
        if (y < 5)
        {
            let y = 5;
        }
        return;
    }

    // Метод для получения текущего положения по оси X
    method int getX() {
        return x;
    }

    // Метод для получения текущего положения по оси Y
    method int getY() {
        return y;
    }

    // Метод для обработки столкновения с другим объектом
    method boolean checkCollision(int objX, int objY, int objWidth, int objHeight) {
        return false;
    }

    method int getWidth() {
        // В данном примере предполагается, что ширина самолета фиксирована
        return 50; // Примерное значение ширины
    }

    // Метод для получения высоты самолета
    method int getHeight() {
        return 30; // Примерное значение высоты
    }

    method void draw(){ 
        do Screen.setColor(true); 
        do Screen.drawLine(x, y, x - 3, y - 3); 
        do Screen.drawLine(x - 3, y - 3, x - 4, y - 3); 
        do Screen.drawLine(x - 4, y - 3, x - 4, y - 1); 
        do Screen.drawPixel(x - 3, y); 
        do Screen.drawLine(x - 4, y + 1, x - 4, y + 2); 
        do Screen.drawLine(x - 4, y + 2, x + 1, y + 3); 
        do Screen.drawLine(x + 1, y + 3, x - 1, y + 8); 
        do Screen.drawLine(x - 1, y + 8, x + 1, y + 8); 
        do Screen.drawLine(x + 1, y + 8, x + 5, y + 4); 
        do Screen.drawLine(x + 5, y + 4, x + 11, y + 4); 
        do Screen.drawLine(x + 12, y + 3, x + 12, y + 2); 
        do Screen.drawLine(x + 11, y + 1, x + 10, y + 1); 
        do Screen.drawLine(x + 9, y, x, y); 
        do Screen.drawLine(x + 6, y, x + 3, y - 3); 
        do Screen.drawLine(x + 3, y - 3, x + 1, y - 3); 
        do Screen.drawLine(x + 1, y - 3, x + 1, y - 2); 
        do Screen.drawPixel(x + 2, y - 1); 
        do Screen.drawPixel(x + 5, y + 2); 
        do Screen.drawPixel(x + 7, y + 2); 
        do Screen.drawPixel(x + 9, y + 2); 
        do Screen.setColor(false); 
        return;
    }
}